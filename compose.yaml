# ⚠️ WARN: only for development. Use kubernetes in production

networks:
  bot:
    driver: bridge

volumes:
  postgres-data:
  redis-data:

services:
  bot-dev:
    container_name: bot-dev
    build:
      context: .
      dockerfile: Dockerfile.dev
    env_file: .env
    environment:
      LOCAL: True
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: bot
    networks:
      - bot
    volumes:
      - ./src:/usr/src/app/src
      - ./alembic.ini:/usr/src/app/alembic.ini
      - ./alembic:/usr/src/app/alembic
    restart: no
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: postgres:17.4-alpine
    container_name: bot-postgres
    networks:
      - bot
    environment:
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: password
      POSGRES_URL: postgres
      POSTGRES_DB: bot
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready --username=$$POSTGRES_USER --dbname bot
      start_period: 10s
      start_interval: 1s
    restart: always

  redis:
    image: redis:7.4.2-alpine
    container_name: bot-redis
    networks:
      - bot
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      start_period: 10s
      start_interval: 1s
    restart: always
